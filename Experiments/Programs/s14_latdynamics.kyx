Functions.
  R car(). /* Tire stiffness rear*/
  R caf(). /* Tire stiffness front*/
  R lr(). /* Length from center of gravity to front/rear axle */
  R lf(). /* Length from center of gravity to front/rear axle */
  R k(). /* Curvature of reference path */
  R m(). /* Vehicle Mass */
  R jz().
  R w(). /*distance to lane marking*/
  R v().
  R ep().
  R overshoot().
  R error().
  
  B initial() <-> (
    ep() >= 0 & error() = 0.03 & overshoot() <= 0.25-error() /*& overshoot() >= -0.25 - error()*/ &
    car() = 86915 & y <= overshoot() - error() & y >= -overshoot() + error() & psi = 0 & caf() = 90000 & theta = 0 & m() = 2045 & lf() = 1.073 & jz() = 4115 & lr() = 1.667 & w() <= error() & w() >= -error() 
  ).
  
  
  HP ctrl::= {
    ?y+error() = overshoot(); d:=*; ?(-0.5 <= d & d < 0);
    ++ ?y-error() = -overshoot(); d:=*; ?(0 < d & d <= 0.5);
    ++ ?(y-error() < overshoot() & y+error() > -overshoot()); d:=*; ?(-0.5 <= d & d <= 0.5);
  }.

  HP drive ::= {
    t:= 0;
    {
    	psi' = -(caf()*lf()*lf() + car()*lr()*lr())/(jz()*v())*psi + (caf()*lf()*d)/jz(),
  		y' = v()*theta,
  		theta' = -psi + v()*k(), 
  		t' = 1 & t <= ep() & psi <= 1.5 & psi >= -1.5 & theta <= 0.52 & theta >= -0.52 & y-error() <= overshoot() & y+error() >= -overshoot()
    }
  }.
End.

ProgramVariables.
  R psi.
  R theta.
  R y.
  R d.
  R t.
End.

Problem.
  v() >=0 & v() <= 2.7 & initial()
 -> [
      {
        ctrl;
        drive;
      }*@invariant(y-error() <= overshoot() & y+error() >= -overshoot())
    ] (y <= 0.25 & y >= -0.25)
End.